代码规范
养成良好的代码规范习惯，便于沟通、PR Reivew和减少bug的出现，统一编码的规范并熟悉react的开发流程，
其中对react当中的命名约定、目录结构、导出方式、箭头函数、注释等方面，学习并熟练掌握

github/gitlab使用流程
学习dev/ops的开发模式，并掌握其开发流程，学习并掌握如何使用github/gitlab工具，逐渐掌握开发流程的每个步骤，在项目中规范的做好整个开发流程

react学习
在react的学习中同时跟进react的考核项目和meta-shower项目，在跟进项目的过程中不断对学习的新技术进行运用
1、学习react+ts的在mac系统下的部署环境配置，配置vs code的setting.json统一代码的格式化形式
2、学习使用react的知识去初步编写UI界面，其次了解并掌握react框架的写法
3、逐步学习react的组件、props、hooks、router等进阶知识，在项目开发中运用并逐渐掌握这些用法，边开发边优化代码，提高react的技能和知识储备

flex布局和es6的学习
1、学习sass的使用方式，进一步学习css的样式并熟练掌握
2、学习flex的弹性布局，提高页面的灵活性
3、掌握并使用rem自适应编写样式
4、熟悉es6语法知识，并逐步运用在项目编写中

AI初了解和学习
初步了解并学习AI领域的运用，学习相关AI基础知识以及将学习的AI知识实践运用

CI/CD的项目部署
1、学习CI的配置打包，tag版本
2、学习CD的配置，并成功发布考核项目


学习 React 可以按照以下清单进行：

1. HTML、CSS 和 JavaScript 基础：React 是基于 JavaScript 的库，因此首先需要掌握 HTML、CSS 和 JavaScript 的基础知识。了解 DOM 操作、事件处理、函数和变量等基本概念是学习 React 的前提。

2. React 基础概念：学习 React 的基本概念，包括组件、状态、属性、生命周期等。可以通过阅读 React 官方文档或相关教程来学习这些概念。

3. JSX 语法：JSX 是一种类似 HTML 的语法，用于描述 React 组件的结构和样式。学习 JSX 的语法规则和用法，并了解如何将 JSX 转换为 JavaScript。

4. 组件开发：学习如何创建和使用 React 组件，包括函数组件和类组件。了解组件的生命周期和状态管理方式，以及如何通过属性传递数据和事件处理。

5. 虚拟 DOM 和渲染：了解 React 的虚拟 DOM 概念，学习如何使用 React 的渲染方法将组件渲染到页面上。

6. 状态管理：学习如何在 React 中管理组件的状态，包括使用内部状态和使用外部状态管理库（如 Redux 或 MobX）。

7. React 路由：学习如何使用 React 路由库（如 React Router）来实现页面之间的导航和路由。

8. 表单处理：学习如何处理表单输入和验证，包括受控组件和非受控组件的使用。

9. 异步操作处理：学习如何处理异步操作，如发送网络请求或处理定时器。可以使用异步库（如 Axios 或 Fetch）来发送请求，并了解如何在组件中处理异步操作的结果。

10. 组件库和工具链：了解常用的 React 组件库和工具链，如 React Bootstrap、Material-UI、Create React App 等。这些工具可以帮助你更快地开发和构建 React 应用。

通过以上学习清单，你将能够掌握 React 的基本知识和技能，并能够开始开发和构建 React 应用。不断实践和深入学习将帮助你更好地掌握 React 的高级特性和最佳实践。